#LyX 1.6.10 created this file. For more info see http://www.lyx.org/
\lyxformat 345
\begin_document
\begin_header
\textclass scrartcl
\use_default_options true
\language english
\inputencoding auto
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize a4paper
\use_geometry false
\use_amsmath 1
\use_esint 1
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Title
Guide to estimating the distribution of selection coefficients using the
 TdG12 site-wise mutation-selection model
\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
This document describes how to use the TdG12 site-wise mutation-selection
 model (
\begin_inset Quotes els
\end_inset

swMutSel0
\begin_inset Quotes ers
\end_inset

) to estimate the distribution of selection coefficients (or 
\begin_inset Quotes els
\end_inset

fitness effects
\begin_inset Quotes ers
\end_inset

) from an alignment of protein coding sequences.
\end_layout

\begin_layout Subsection
Requirements
\end_layout

\begin_layout Standard
The steps in this tutorial have been tested on Linux and Mac OS X 10.6+.
 Our program does not estimate tree topology or perform branch length optimisati
on, therefore we recommend the use of two popular tools for this purpose:
 RAxML and PAML
\begin_inset Foot
status open

\begin_layout Plain Layout
However, you can use other programs if you prefer.
\end_layout

\end_inset

.
 Both have Windows versions available for download, but they have not been
 tested by us.
 We assume that you already have them installed and are able to run them
 on your computer.
 Our software is written in Java and should run on all platforms that have
 the Java Runtime Environment (JRE) (6 or later) installed.
 The JRE is available for Windows, Linux and Mac OS X 10.6+.
\end_layout

\begin_layout Subsection
Installation
\end_layout

\begin_layout Standard
You can download the executable files for the program from http://mathbio.nimr.mrc.
ac.uk/.
 Download the tdg12.zip file and extract the contents.
 The download contains the files required for this tutorial and 
\family typewriter
tdg12.jar
\family default
, which is the Java binary file for the program.
\end_layout

\begin_layout Subsection
Citation
\end_layout

\begin_layout Standard
Tamuri AU, dos Reis, M and Goldstein RA (2012) Using Site-wise Mutation-Selectio
n Models to Estimate the Distribution of Selection Coefficients from Phylogeneti
c Data.

\emph on
 
\emph default
(in press, 
\emph on
GENETICS
\emph default
)
\end_layout

\begin_layout Section
Tutorial
\end_layout

\begin_layout Subsection
Preparing the alignment and tree
\end_layout

\begin_layout Standard

\emph on
[[Basic background? Types of sequences, not too many gaps, no recombination
 etc.
 You need good alignments and enough divergence??]]
\end_layout

\begin_layout Standard
For the purposes of this tutorial, we will be estimating the distribution
 of selection coefficients of a set of mammalian mitochondrial ATP8 protein
 coding genes.
 The download provides an alignment, atp8.phyl (which was built using PRANK)
 and a tree, atp8.tree (estimated by RAxML with branch lengths optimised
 using PAML's codeml).
 Full details are available from the program
\begin_inset Quotes ers
\end_inset

s websites.
 The options used for running RAxML were:
\end_layout

\begin_layout Quote

\family typewriter
raxmlHPC -f a -x 12345 -p 12345 -N 100 -m GTRGAMMA -s atp8.phy -n atp8
\end_layout

\begin_layout Standard
and the PAML codeml control file (codeml.ctl) is available in the download.
 We optimised the branch lengths using the FMutSel0 model.
\end_layout

\begin_layout Subsection
Getting estimates of global parameters from codeml
\end_layout

\begin_layout Standard
There are a number of global, site-invariant, parameters that are required
 for the TdG12 model.
 They are:
\end_layout

\begin_layout Enumerate
\begin_inset Formula $\tau$
\end_inset

 (tau) - rate of multiple substitutions.
\end_layout

\begin_layout Enumerate
\begin_inset Formula $\kappa$
\end_inset

 (kappa) - transition/transversion bias.
\end_layout

\begin_layout Enumerate
\begin_inset Formula $\pi$
\end_inset

 (pi) - base nucleotide composition.
\end_layout

\begin_layout Enumerate
\begin_inset Formula $\mu$
\end_inset

 (mu) - branch scaling.
\end_layout

\begin_layout Standard
Each of these parameters can be estimated under the TdG12 model but this
 requires significant computational resources and the use of a distributed
 version of the software (not covered here).
 However, you can get obtain good estimates for 
\begin_inset Formula $\kappa$
\end_inset

, 
\begin_inset Formula $\pi$
\end_inset

 and 
\begin_inset Formula $\mu$
\end_inset

 from the faster PAML codeml analysis.
 The results file (named 
\begin_inset Quotes els
\end_inset

mlc
\begin_inset Quotes ers
\end_inset

) contains estimates of 
\begin_inset Formula $\kappa$
\end_inset

 and 
\begin_inset Formula $\pi$
\end_inset

.
 An estimate of 
\begin_inset Formula $\mu$
\end_inset

 can be calculated from 
\begin_inset Formula $\mu=3\times T_{dS}/T$
\end_inset

, where 
\begin_inset Formula $T_{dS}$
\end_inset

 is the tree length in 
\begin_inset Formula $dS$
\end_inset

 (synonymous changes) units and 
\begin_inset Formula $T$
\end_inset

 is the total tree length, also found in the codeml 
\begin_inset Quotes els
\end_inset

mlc
\begin_inset Quotes ers
\end_inset

 results file.
\end_layout

\begin_layout Standard
Therefore, the estimates for the global parameters for the ATP8 gene alignment
 are:
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset Formula $\kappa=4.93022$
\end_inset


\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset Formula $\pi=\{0.25299,0.22268,0.43860,0.08572\}$
\end_inset


\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset Formula $\mu=3\times T_{dS}/T=3\times70.7207/113.24814=1.8734$
\end_inset

.
 
\end_layout

\begin_layout Standard
We choose a small number for 
\begin_inset Formula $\tau$
\end_inset

, 
\begin_inset Formula $1.0\times10^{-2}$
\end_inset

.
\end_layout

\begin_layout Subsection
Analysing the data using the site-wise mutation-selection model
\end_layout

\begin_layout Standard
You can now run the TdG12 program to estimate the site-wise fitness of each
 amino acid in our alignment.
 The available options for running the program are:
\end_layout

\begin_layout Description
-t The tree file in NEWICK format (required).
\end_layout

\begin_layout Description
-s The protein coding alignment file in PHYLIP sequential format (required).
\end_layout

\begin_layout Description
-gc The genetic code, 
\begin_inset Quotes els
\end_inset

standard
\begin_inset Quotes ers
\end_inset

 or 
\begin_inset Quotes els
\end_inset

vertebrate_mit
\begin_inset Quotes ers
\end_inset

 (required).
 
\end_layout

\begin_layout Description
-tau Rate of multiple substitutions (required).
\end_layout

\begin_layout Description
-kappa Transition/transversion bias (required).
\end_layout

\begin_layout Description
-pi Comma-separated (with no spaces) base nucleotide frequencies (T,C,A,G)
 (required).
\end_layout

\begin_layout Description
-mu Branch scaling factor (required).
\end_layout

\begin_layout Description
-useapprox Use the approximation for unobserved residues which allows for
 faster computation (optional).
\end_layout

\begin_layout Description
-site Location of the site to analyse (optional, default = all sites in
 the alignment).
\end_layout

\begin_layout Description
-optimruns The number of restarts for the optimisation routine (optional,
 default = 1).
\end_layout

\begin_layout Description
-threads The number of threads to use for processing in a multicore environment
 (optional, default = 1).
\end_layout

\begin_layout Standard
You start the analysis of the set of ATP8 genes by running:
\end_layout

\begin_layout Quote

\family typewriter
java -cp tdg12.jar tdg.Analyse -s atp8.phy -t atp8.tree -gc vertebrate_mit -tau
 1e-2 -kappa 4.93 -pi 0.2530,0.2227,0.4386,0.0857 -mu 1.8734 > tdg.out
\end_layout

\begin_layout Standard
You must add 
\begin_inset Quotes els
\end_inset


\family typewriter
> tdg.out
\family default

\begin_inset Quotes ers
\end_inset

 to redirect the analysis output to a file named tdg.out.
\end_layout

\begin_layout Subsubsection*
Using multicore/multiple CPUs
\end_layout

\begin_layout Standard
If you are running the program on a computer with multicore or multiple
 CPUs, you can specify the 
\series bold
-threads
\series default
 option.
 Usually, this would be the number of available cores 
\begin_inset Formula $-$
\end_inset

 1.
 For example, to utilise 3 cores you would run:
\end_layout

\begin_layout Quote

\family typewriter
java -cp tdg12.jar tdg.Analyse -s atp8.phy -t atp8.tree -gc vertebrate_mit -tau
 1e-2 -kappa 7.8 -pi 0.25,0.25,0.25,0.25 -mu 2.3 
\series bold
-threads 3
\series default
 > tdg.out
\end_layout

\begin_layout Subsection
Parsing the results and calculating the distribution
\end_layout

\begin_layout Standard
Once the program completes, the results saved in tdg.out need to be processed
 to calculate the distribution of selection coefficients.
 The output looks something like (truncated):
\end_layout

\begin_layout Quotation

\family typewriter
\size scriptsize
Site 1 - Residues: [1/20] { 1:(12, M), 2:(0, A), 3:(1, R), ...
 } 
\end_layout

\begin_layout Quotation

\family typewriter
\size scriptsize
Site 1 - Optimisation run (267 evaluations).
 lnL = -4.939901E-5, Params = {0.0, ...} 
\end_layout

\begin_layout Quotation

\family typewriter
\size scriptsize
Site 1 - Homogeneous model lnL: -4.939901011180276E-5 
\end_layout

\begin_layout Quotation

\family typewriter
\size scriptsize
Site 1 - Fitness: { -13.06494, -18.20550, -16.32137, ...
 }
\end_layout

\begin_layout Quotation

\family typewriter
\size scriptsize
Site 1 - Pi: { 4.79931E-6, 5.79345E-8, 2.70189E-7, ...
 }
\end_layout

\begin_layout Quotation

\family typewriter
\size scriptsize
...
\end_layout

\begin_layout Standard
The output is quite verbose.
 Run the following command (specifying the name of the result file with
 
\begin_inset Quotes els
\end_inset

-o tdg.out
\begin_inset Quotes ers
\end_inset

):
\end_layout

\begin_layout Quote

\family typewriter
java -cp tdg12.jar tdg.results.All
\series bold
 -o tdg.out
\series default
 -gc vertebrate_mit -tau 1e-6 -kappa 7.8 -pi 0.25,0.25,0.25,0.25 -mu 2.3
\end_layout

\begin_layout Standard
The global parameters should be the same as were specified when you run
 the analysis.
 This command reads the results file and the global parameters from the
 command-line, and writes the files:
\end_layout

\begin_layout Description
F.txt Fitness values for each amino acid at each site
\end_layout

\begin_layout Description
Q0.txt Neutral mutation matrix for entire alignment
\end_layout

\begin_layout Description
S.txt Selection coefficients matrix for each site
\end_layout

\begin_layout Description
QS.txt Mutation with selection matrix for each site
\end_layout

\begin_layout Description
PiS.txt Codon frequencies at each site
\end_layout

\begin_layout Description
PiAA.txt Amino acid frequencies at each site
\end_layout

\begin_layout Description
distribution.mutations.csv the distribution of selection coefficients for
 mutations
\end_layout

\begin_layout Description
distribution.substitutions.csv the distribution for substitutions.
 
\end_layout

\begin_layout Standard
The last two are comma-separated value files that can be opened in a program
 like Excel to plot the distribution.
 The three columns in the distribution files are (i) the histogram bins
 for 
\begin_inset Formula $S$
\end_inset

 (ii) all mutations or subsitutions and (iii) non-synonymous mutations or
 substitutions.
\end_layout

\begin_layout Section
Colophon
\end_layout

\begin_layout Standard
TdG12 uses the following libraries:
\end_layout

\begin_layout Enumerate
Colt Project (
\begin_inset CommandInset href
LatexCommand href
target "http://acs.lbl.gov/software/colt/"

\end_inset

).
 For linear algebra.
\end_layout

\begin_layout Enumerate
PAL: Phylogenetic Analysis Library (
\begin_inset CommandInset href
LatexCommand href
target "http://www.cebl.auckland.ac.nz/pal-project/"

\end_inset

).
 reading/traversing/writing NEWICK trees and PHYLIP alignments.
\end_layout

\begin_layout Enumerate
Apache Commons (
\begin_inset CommandInset href
LatexCommand href
target "http://commons.apache.org/"

\end_inset

).
 Specifically: collections, configuration, lang, logging and math.
\end_layout

\begin_layout Enumerate
Guava: Google Core Libraries (
\begin_inset CommandInset href
LatexCommand href
target "http://code.google.com/p/guava-libraries/"

\end_inset

).
\end_layout

\begin_layout Enumerate
JCommander (
\begin_inset CommandInset href
LatexCommand href
target "http://jcommander.org/"

\end_inset

).
 Parsing and managing command-line options.
\end_layout

\begin_layout Enumerate
Simple Java HTTP server (
\begin_inset CommandInset href
LatexCommand href
target "http://www.simpleframework.org/"

\end_inset

).
 Used by tdg.distributed.Slave.
\end_layout

\begin_layout Enumerate
Asynchronous Http Client library for Java (
\begin_inset CommandInset href
LatexCommand href
target "https://github.com/sonatype/async-http-client"

\end_inset

).
 Used by tdg.distributed.Master to make asynchronous HTTP requests to the
 slaves.
\end_layout

\end_body
\end_document
